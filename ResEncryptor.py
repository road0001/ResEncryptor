########## CONFUSE ##########
___xQgjcDrLtgtmRmQZWZIKINCV='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'
########## CONFUSE ##########

import os
import sys
import glob
import math
import time
import random
from random import shuffle
import base64
from Cryptodome.Util.Padding import pad
from Cryptodome.Cipher import AES
import _7zexe as _7z
import platform
import hashlib
import colorout as out
import json
import send2trash
from shutil import copyfile
import struct

########## CONFUSE ##########
___ac2R3D0L90YNLmofYbwluG2XlBERtrTLl54Yk93QaC0DezrWkjDf2TcpMDnSkg6KK9nBcKLKm4f123JRON9LkNCTrtvpOGjZuaKIiBZR67F9cDAEztIbP7NDsJIeloTE=''
########## CONFUSE ##########

VERSION={
"appName":"ResEncryptor",
"appNameCN":"资源加密压缩工具",
"versionUpdate":[
{
	"mainVersion":"1.1.0",
	"dateVersion":"20230628",
	"versionDesc":[
		"加入混淆压缩包最后一个文件尾部功能，以减少特征。",
		"修复极小的文件，混淆头尾会溢出的bug。",
	""]
},
{
	"mainVersion":"1.0.9",
	"dateVersion":"20230627",
	"versionDesc":[
		"调整AES密钥结构。",
		"调整混淆数据大小范围。",
		"调整解密配置数据编码方式为base64。",
		"调整解密配置分隔符为默认盐，以增强兼容性。",
		"修复极小概率情况下，输入正确密码也会解密失败的bug。",
	""]
},
{
	"mainVersion":"1.0.8",
	"dateVersion":"20230626",
	"versionDesc":[
		"加入自动更新混淆数据功能。",
		"加入压缩、解压用时统计功能。",
		"解密配置加入项目名、版本字段。",
		"调整解密配置混淆数据随机范围。",
		"调整输出的项目文件夹改为随机字符串。",
	""]
},
{
	"mainVersion":"1.0.7",
	"dateVersion":"20230625",
	"versionDesc":[
		"调整解密配置文件名的附加算法，改为随机异或。",
		"调整解密配置重复迭代算法，减小密文数据体积。",
		"调整解密配置重复迭代次数，大幅提升暴力破解时间成本。",
	""]
},
{
	"mainVersion":"1.0.6",
	"dateVersion":"20230620",
	"versionDesc":[
		"更换混淆数据。",
		"将重命名功能改为Python内置库。",
		"调整混淆文件头的数据长度阈值。",
		"加入解密配置重复迭代功能，以对抗暴力破解。",
	""]
},
{
	"mainVersion":"1.0.5",
	"dateVersion":"20230619",
	"versionDesc":[
		"更换混淆数据。",
		"统计文件时，加入文件夹的统计。",
		"加入混淆7Z压缩包文件头功能，规避文件头识别。",
	""]
},
{
	"mainVersion":"1.0.4",
	"dateVersion":"20230613",
	"versionDesc":[
		"更换混淆数据。",
		"略微调整解密流程。",
		"去除配置文件编码base64的操作。",
	""]
},
{
	"mainVersion":"1.0.3",
	"dateVersion":"20230612",
	"versionDesc":[
		"加入密钥随机大小写功能。",
		"加入分卷大小随机增量功能。",
		"在代码中随机位置加入混淆数据。",
	""]
},
{
	"mainVersion":"1.0.2",
	"dateVersion":"20230609",
	"versionDesc":[
		"加入自动清理压缩包功能（移入回收站）。",
		"加入在找不到配置文件时，手动输入配置文件名功能。",
		"将字符串中format引用变量的方法改为f''。",
	""]
},
{
	"mainVersion":"1.0.1",
	"dateVersion":"20230608",
	"versionDesc":[
		"完善功能提示。",
		"完成解密解压功能。",
		"修复文本错误。",
	""]
},
{
	"mainVersion":"1.0",
	"dateVersion":"20230607",
	"versionDesc":[
		"实现基础功能。",
		"完成加密压缩功能。",
	""]
}
]
}

########## CONFUSE ##########
___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'
########## CONFUSE ##########

'''
Configs
'''
# 输出目录
outputDir=f'{os.getcwd()}\\output'
# 分卷范围（此范围是压缩前的分卷范围，压缩后的情况不可知）。[最少分卷，最多分卷，分卷增量上限]
volumeRange=[20,50,1024]
# 默认盐，和配置文件加解密有关，不可随便更换，否则不兼容其他版本
defaultSalt='KnWn7ZYSa309KyYnruB0JXF9zIRAsQNx'
# 随机文件头长度范围
randomHeadLengthRange=[1024,4096]
# 解密配置数据重复加密迭代次数
encryptConfigRepeatCount=[10000,10000]
# 混淆数据长度范围
confuseLength=[1024,16384]
# 解密配置与混淆数据的分隔符
encryptConfigSplit=defaultSalt

########## CONFUSE ##########
___RU3tqzxPlB4pQNlxFIdiQILY7YLY0TsDwKreYX7E6xjuJrhJCt84HTHPOmGcUzc5qeqCD=''
########## CONFUSE ##########

'''
Utils
'''
def cmd(c):
	os.system(c)

def wait(n):
	time.sleep(n)

def runBat(batStr,output=''):
	writeFile(f'{output}temp.bat',batStr)
	os.system(f'{output}temp.bat')
	os.remove(f'{output}temp.bat')

def pause(c=None):
	if c:
		print(c)
	cmd('pause>nul')

def cwd():
	return os.getcwd()

def exist(dirs):
	return os.path.exists(dirs)

########## CONFUSE ##########
___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'
########## CONFUSE ##########

def loadFile(file,tp='r'):
	try:
		f=open(file,tp)
		fs=f.read()
		f.close()
		return fs
	except:
		return None

def writeFile(file,data,tp='w'):
	try:
		f=open(file,tp)
		f.write(data)
		f.close()
		return True
	except:
		return False

########## CONFUSE ##########
___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'
########## CONFUSE ##########

def getAllFileList(addr,includeFolders=False):
	allFileList={'files':[],'folders':[]}
	if not exist(addr): #路径不存在的情况
		pass
	elif not os.path.isdir(addr): #路径为文件的情况
		allFileList['files'].append(addr)
	else: #路径为文件夹的情况
		for root, dirs, files in os.walk(addr):
			for name in files:
				allFileList['files'].append(os.path.join(root, name))
			for name in dirs:
				allFileList['folders'].append(os.path.join(root, name))
	if includeFolders==True:
		return allFileList
	else:
		return allFileList['files']

def max7zVolume(fileList):
	current=0
	index=0
	if len(fileList)>0:
		for i in range(len(fileList)):
			f=fileList[i]
			fs=f.split('.')[-1]
			fn=0
			try:
				fn=int(fs)
			except:
				pass
			if fn>current:
				current=fn
				index=i
		return fileList[index]
	else:
		return None

def getAllFileSize(fileList):
	fileSize=0
	for file in fileList:
		fileSize+=os.path.getsize(file)
	return fileSize

def formatFileSize(b):
	units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']
	size = b
	unitIndex = 0
	while size >= 1024 and unitIndex < len(units) - 1:
		size /= 1024
		unitIndex+=1
	
	# 保留两位小数，四舍五入
	size = round(size * 100) / 100
	return f'{size} {units[unitIndex]}'

def randomPassword(length=10):
	pasArr = [
		'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',
		'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',
		'0','1','2','3','4','5','6','7','8','9',
		# '\'','~','!','@','#','$','%','^','&','*','(',')','-','=','_','+','[',']','\\',';',''',',','.','/','{','}','|',':','"','<','>','?',
		# '~','!','@','#','$','%','^','&','*','(',')','-','=','_','+','[',']',';',''',',','.','/','{','}','|',':','"','<','>','?',
	]
	password = ''
	pasArrLen = len(pasArr)
	for i in range(0,length):
		password += random.choice(pasArr)
	return password

def genSalt():
	return randomPassword(32)

def randomBin(length=10):
	return os.urandom(length)

def genCapsList(length):
	capsList=[]
	for i in range(length):
		isCaps=random.randint(0,1)
		if isCaps==1:
			capsList.append(i)
	return capsList

def formatSeconds(s):
	timeObj=time.gmtime(s)
	timeStr=''
	if s<60:
		timeStr=f'{round(s,2)}秒'
	else:
		if timeObj.tm_yday-1>0:
			timeStr+=f'{timeObj.tm_yday-1}天'
		if timeObj.tm_hour>0:
			timeStr+=f'{timeObj.tm_hour}小时'
		if timeObj.tm_min>0:
			timeStr+=f'{timeObj.tm_min}分'
		if timeObj.tm_sec>=0:
			timeStr+=f'{timeObj.tm_sec}秒'
	return timeStr

########## CONFUSE ##########
___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'
########## CONFUSE ##########

'''
AES加密
'''
# 将明文用AES加密
def AES_Encrypt(password, data):
	key=hashlib.md5((f'{password}|{defaultSalt}').encode(encoding='utf-8')).hexdigest()
	iv=hashlib.md5((key).encode(encoding='utf-8')).hexdigest()[0:16]
	obj = AES.new((key).encode(), AES.MODE_CBC, (iv).encode())
	# return base64.b64encode(obj.encrypt(pad(data.encode(),16)))
	# 对于字符串数据，将它转化为bytes
	if isinstance(data,str):
		data=data.encode(encoding='utf-8')
	return obj.encrypt(pad(data,16))

def AES_Decrypt(password, data):
	key=hashlib.md5((f'{password}|{defaultSalt}').encode(encoding='utf-8')).hexdigest()
	iv=hashlib.md5((key).encode(encoding='utf-8')).hexdigest()[0:16]
	obj = AES.new((key).encode(), AES.MODE_CBC, (iv).encode())
	# return obj.decrypt(base64.b64decode(data))
	return obj.decrypt(data)

def xorStr(s,k):
	r=b''
	for c in s:
		if isinstance(c,str):
			c=ord(c)
		r+=struct.pack('B',c^k)
	return r

########## CONFUSE ##########
___6U9B9nbXjUgnsGXPxXx7MjnLRkGa87yGqQSZUXActs3YnyhGMOX3oM6=''
########## CONFUSE ##########

'''
App
'''
targetFileData={}
def applyFileData(file):
	targetFileData['path']=file
	targetFileData['name']=file.split('\\')[-1]
	pathList=getAllFileList(targetFileData['path'],True)
	fileList=pathList['files']
	fileSize=getAllFileSize(fileList)
	folderList=pathList['folders']

	targetFileData['fileList']=fileList
	targetFileData['fileCount']=len(fileList)
	targetFileData['folderCount']=len(folderList)
	targetFileData['fileSize']=fileSize

########## CONFUSE ##########
___mmjJO9yrZrGnTTB3FEcZ746OlHi22pOZ1paRqFCQAYUxbxQkYhjUM1o9ZNc840pY7x=''
########## CONFUSE ##########

'''
生成配置数据
参数：混淆头，混淆尾
'''
def genEncryptConfig(chead, ctail, desc):
	# ctype=1：混淆头尾合并；ctype=2：混淆头尾拆分
	ctype=random.randint(1,3)
	config={
		'salt':genSalt(),
		'name':'',
		'description':desc,
		'timestamp':int(time.time()),
		'fileList':[],
		'capsList':genCapsList(128),
		'originHead':'',
		'originTail':'',
		'version':VERSION['versionUpdate'][0],
	}
	if ctype==1:
		config['confuse']=chead+ctail
	elif ctype==2:
		config['confuseHead']=chead
		config['confuseTail']=ctail
	elif ctype==3:
		config['confuseHead']=chead
		config['confuseMidd']=chead+ctail
		config['confuseTail']=ctail
	# 随机配置序列
	ckeys=list(config.keys())
	random.shuffle(ckeys)
	cconfig={}
	for k in ckeys:
		cconfig[k]=config[k]
	return cconfig

def xorEncConfigName(configName):
	configNameXorNum=random.randint(8,255)
	# 返回n+1字节，其中n字节为异或后的bytes，最后一位为异或码
	return xorStr(configName,configNameXorNum) + struct.pack('B',configNameXorNum)

def xorDecConfigName(configNameXorAll):
	configNameXorStr=configNameXorAll[0:-1]
	configNameXorNum=configNameXorAll[-1]
	return xorStr(configNameXorStr, configNameXorNum)

def b64encode(s):
	if isinstance(s,str):
		s=s.encode(encoding='utf-8')
	return base64.b64encode(s).decode('utf-8')
def b64decode(s):
	if isinstance(s,str):
		s=s.encode(encoding='utf-8')
	return base64.b64decode(s).decode('utf-8')

########## CONFUSE ##########
___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'
########## CONFUSE ##########

'''
加密配置数据
参数：配置，混淆头，混淆尾
'''
def encryptEncryptConfig(password,config,chead,ctail):
	# return base64.b64encode('{}\b{}\b{}'.format(chead,json.dumps(config,ensure_ascii=False),ctail).encode(encoding='utf-8')).decode('UTF-8')
	# return AES_Encrypt(password,f'{chead}\b{json.dumps(config,ensure_ascii=False)}\b{ctail}').decode('UTF-8')
	# return AES_Encrypt(password,f'{chead}\b{json.dumps(config,ensure_ascii=False)}\b{ctail}')
	
	# 使用多次加密迭代，增加解密时间成本，抗暴力破解
	encryptCount=random.randint(encryptConfigRepeatCount[0], encryptConfigRepeatCount[1])
	encConfigStr=f'{chead}{encryptConfigSplit}{b64encode(json.dumps(config,ensure_ascii=False))}{encryptConfigSplit}{ctail}'
	# for i in range(0,encryptCount-1):
	# 	encConfigStr=base64.b64encode(AES_Encrypt(password,encConfigStr)).decode('UTF-8')
	# encConfigStr=AES_Encrypt(password,encConfigStr)
	for i in range(0,encryptCount):
		encConfigStr=AES_Encrypt(password,encConfigStr)
	return encConfigStr
'''
解密配置数据
参数：已加密的配置数据
'''
def decryptEncryptConfig(password,data):
	# decData=AES_Decrypt(password,data)
	# # config=base64.b64decode(data).decode(encoding='utf-8').split('\b')[1]
	# config=decData.decode(encoding='utf-8').split('\b')[1]
	# return json.loads(config)
	
	# 使用多次加密迭代，增加解密时间成本，抗暴力破解
	# decData=AES_Decrypt(password,data)
	# for i in range(0, encryptConfigRepeatCount[1]):
	# 	decData=AES_Decrypt(password,base64.b64decode(decData))
	# 	try:
	# 		decSplit=decData.decode(encoding='utf-8').split('\b')
	# 		if len(decSplit)==3:
	# 			config=decSplit[1]
	# 			try:
	# 				return json.loads(config)
	# 			except:
	# 				pass
	# 	except:
	# 		pass
	# return False
	decConfigStr=data
	for i in range(0, encryptConfigRepeatCount[1]):
		try:
			decConfigStr=AES_Decrypt(password,decConfigStr)
		except:
			# 当AES无法正确解码时，循环终止，进行后续处理
			break
	decSplit=decConfigStr.decode('utf-8','ignore').split(encryptConfigSplit)
	if len(decSplit)==3:
		config=decSplit[1]
		try:
			return json.loads(b64decode(config))
		except:
			return False
	else:
		return False

########## CONFUSE ##########
___Qg5Q4RYlvcSYu4U5Rrkvzw9aVlkvlfzW6EP6ELNiQwTBAjB5T2utUnUmXEKx=''
########## CONFUSE ##########

'''
根据配置计算压缩包密钥
参数：密码，配置数据
'''
def calcEncryptKey(password, config):
	# 生成盐和盐的MD5
	salt=config['salt']
	saltMd5=hashlib.md5((salt).encode(encoding='utf-8')).hexdigest()
	# 生成密码的MD5
	passwordMd5=hashlib.md5((password+salt).encode(encoding='utf-8')).hexdigest()
	# 生成时间戳和时间戳的MD5
	timestamp=config['timestamp']
	timestampMd5=hashlib.md5((f'{timestamp}').encode(encoding='utf-8')).hexdigest()
	# 生成【密码的MD5|盐|时间戳】拼合的MD5
	comitMd5=hashlib.md5((f'{passwordMd5}|{salt}|{timestamp}').encode(encoding='utf-8')).hexdigest()
	# 生成密钥：【密码的MD5盐的MD5时间戳的MD5拼合的MD5】，每个MD5长度32位，总密钥长度128位
	encryptKey=f'{passwordMd5}{saltMd5}{timestampMd5}{comitMd5}'
	# 根据capsList更改大小写
	encryptKeyList=list(encryptKey)
	for caps in config['capsList']:
		encryptKeyList[caps]=encryptKey[caps].upper()
	encryptKey=''.join(encryptKeyList)

	return encryptKey

########## CONFUSE ##########
___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'
########## CONFUSE ##########

def makeOutputDir(addr):
	dirs=f'{outputDir}\\{addr}'
	if not exist(dirs):
		os.makedirs(dirs)
	return dirs

########## CONFUSE ##########
___nPZKybTPFEC4spstsMB896n8FB8DCdOWwNXGP2JBbwB7DTfx0Wyuy23XUS9gr19T7VQGrV0fcCAAKKHwHurU4OOayskKc2sw8tvoAcDwa6fHVRnynkTs=''
########## CONFUSE ##########

def beginEncryptFiles(file):
	applyFileData(file)
	if targetFileData['path']:
		if targetFileData['fileCount']<1:
			out.outlnC('文件数量为0，无法继续进行操作！','yellow','black',1)
			return 0
		out.outlnC('加载文件：【{path}】\n共{fileCount}个文件，{folderCount}个文件夹，总大小：{fSize}'.format(**targetFileData,fSize=formatFileSize(targetFileData['fileSize'])),'green','black',1)
		password=''
		while True:
			if password!='':
				break
			else:
				password=input('请输入密码：')
		desc=input('请输入留言，如果不需要，请留空：\n')
		print()
		out.outlnC('开始进行加密压缩！','black','green',1)

		# 生成混淆头尾和配置数据
		out.outC('正在生成混淆数据……','cyan','black',1)
		confuseHead=base64.b64encode(randomBin(random.randint(confuseLength[0],confuseLength[1]))).decode('UTF-8')
		confuseTail=base64.b64encode(randomBin(random.randint(confuseLength[0],confuseLength[1]))).decode('UTF-8')
		encryptConfig=genEncryptConfig(confuseHead, confuseTail, desc)
		encryptConfig['name']=targetFileData['name']
		out.outlnC('[完成]','green','black',1)

		#生成加密KEY
		out.outC('正在生成加密密钥……','cyan','black',1)
		encryptKey=calcEncryptKey(password,encryptConfig)
		out.outlnC('[完成]','green','black',1)

		# 创建输出目录，并写入必备文件
		out.outC('创建输出目录并写入必备文件……','cyan','black',1)
		projOutputDir=makeOutputDir(genSalt())
		projCfgname='cfname'
		_7z.output7zExe(f'{projOutputDir}\\7z.exe')
		volumeCount=random.randint(volumeRange[0],volumeRange[1])
		volumeSize=int(targetFileData['fileSize'] / volumeCount)+random.randint(0,volumeRange[2])
		out.outlnC('[完成]','green','black',1)

		# 调用7Z进行加密压缩
		out.outlnC('开始进行压缩，这可能需要一定时间……','cyan','black',1)
		zBeginTime=time.time()
		cmdParms={
			'projOutputDir':projOutputDir,
			'encryptKey':encryptKey,
			'volumeSize':volumeSize,
			'fileName':targetFileData['name'],
			'filePath':targetFileData['path'],
			'fileSize':targetFileData['fileSize'],
		}
		cmdStr='@echo off\n"{projOutputDir}\\7z.exe" a -p{encryptKey} -mhe=on -v{volumeSize}b "{projOutputDir}\\{fileName}.7z" "{filePath}"'.format(**cmdParms)
		runBat(cmdStr,'output\\')
		zEndTime=time.time()
		out.outlnC(f'压缩完成！用时{formatSeconds(zEndTime - zBeginTime)}。','green','black',1)

		# 进行7z文件头混淆
		out.outC('正在混淆文件头……','cyan','black',1)
		firstFileName=f"{projOutputDir}\\{targetFileData['name']}.7z.001"
		firstFileNameTmp=f'{firstFileName}.tmp'
		firstFileLength=os.path.getsize(firstFileName)
		randomHeadLength=random.randint(randomHeadLengthRange[0],randomHeadLengthRange[1])
		if randomHeadLength > firstFileLength:
			randomHeadLength=firstFileLength
		randomHead=randomBin(randomHeadLength)
		with open(firstFileName,'rb') as originFile, open(f'{firstFileNameTmp}','wb') as targetFile:
			originData=originFile.read()
			encryptConfig['originHead']=base64.b64encode(originData[0:randomHeadLength]).decode('UTF-8')
			targetFile.write(originData)
			targetFile.seek(0x00)
			targetFile.write(randomHead)
			targetFile.flush()
		os.remove(firstFileName)
		os.rename(f'{firstFileNameTmp}',firstFileName)
		out.outlnC('[完成]','green','black',1)

		# 进行7z文件尾混淆
		out.outC('正在混淆文件尾……','cyan','black',1)
		lastFileName=max7zVolume(getAllFileList(f'{projOutputDir}'))
		lastFileNameTmp=f'{lastFileName}.tmp'
		lastFileLength=os.path.getsize(lastFileName)
		randomTailLength=random.randint(randomHeadLengthRange[0],randomHeadLengthRange[1])
		if randomTailLength > lastFileLength:
			randomTailLength=lastFileLength
		randomTail=randomBin(randomTailLength)
		with open(lastFileName,'rb') as originFile, open(f'{lastFileNameTmp}','wb') as targetFile:
			originData=originFile.read()
			encryptConfig['originTail']=base64.b64encode(originData[-randomTailLength:]).decode('UTF-8')
			targetFile.write(originData)
			targetFile.seek(-randomTailLength,2)
			targetFile.write(randomTail)
			targetFile.flush()
		os.remove(lastFileName)
		os.rename(f'{lastFileNameTmp}',lastFileName)
		out.outlnC('[完成]','green','black',1)

		# 删除不需要的文件
		out.outC('正在清理不必要的文件……','cyan','black',1)
		os.remove(f'{projOutputDir}\\7z.exe')
		out.outlnC('[完成]','green','black',1)

		# 对文件进行乱序重命名
		out.outC('正在重命名文件……','cyan','black',1)
		for fp in getAllFileList(projOutputDir):
			fileName=fp.split('\\')[-1]
			fakeName=genSalt()
			encryptConfig['fileList'].append({
				'fileName':fileName,
				'fakeName':fakeName,
			})
			os.rename(f'{projOutputDir}\\{fileName}',f'{projOutputDir}\\{fakeName}')
		# renStr=f'@echo off\ncd {projOutputDir}\n'
		# for fp in getAllFileList(projOutputDir):
		# 	fileName=fp.split('\\')[-1]
		# 	fakeName=genSalt()
		# 	renStr+=f'ren "{fileName}" "{fakeName}"\n'
		# 	encryptConfig['fileList'].append({
		# 		'fileName':fileName,
		# 		'fakeName':fakeName,
		# 	})
		# runBat(renStr,'output\\')
		out.outlnC('[完成]','green','black',1)

		# 生成混淆后的配置数据
		out.outC('正在加密配置数据……','cyan','black',1)
		configBeginTime=time.time()
		configName=genSalt()
		decryptConfigString=encryptEncryptConfig(password, encryptConfig, confuseHead, confuseTail)
		writeFile(f'{projOutputDir}\\{configName}',decryptConfigString,'wb')
		# writeFile(f'{projOutputDir}\\{projCfgname}',configName) # 用python将文件名写入到临时文件中，以待后续合并使用。不能使用bat的echo，会输出空行
		writeFile(f'{projOutputDir}\\{projCfgname}',xorEncConfigName(configName),'wb') # 用python将文件名写入到临时文件中，以待后续合并使用。不能使用bat的echo，会输出空行
		configEndTime=time.time()
		out.outlnC(f'[完成，用时{formatSeconds(configEndTime - configBeginTime)}]','green','black',1)

		# 复制执行文件到输出目录
		out.outC('正在生成解压程序……','cyan','black',1)
		originFile=sys.argv[0]
		originFileName=originFile.split('\\')[-1]
		if(originFileName.split('.')[-1]!='exe'):
			out.outlnC('[请不要直接运行源码，否则无法解包！]','yellow','black',1)
		else:
			targetFile=projOutputDir+'\\'+originFileName
			copyfile(originFile, targetFile)
			# 混淆exe并重命名
			cpyStr =f'@echo off\ncd "{projOutputDir}"\n'
			cpyStr+=f'copy /b {originFileName}+{configName}+{projCfgname} {genSalt()}.exe>nul\n'
			cpyStr+=f'del {projCfgname}>nul\n'
			cpyStr+=f'del {originFileName}>nul\n'
			runBat(cpyStr,'output\\')
			out.outlnC('[完成]','green','black',1)

		print()
		out.outC(f'输出目录：','cyan','black',1)
		out.outlnC(f'【{projOutputDir}】','green','black',1)
		print()
		out.outC('加密压缩已完成，您可以分享您的文件了！','black','green',1)
		out.outlnC('','white','black',0)

		return 0

########## CONFUSE ##########
___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'
########## CONFUSE ##########

def beginDecryptFiles():
	execFile=sys.argv[0]
	execFileName=execFile.split('\\')[-1]
	# 读取exe文件，并获取末尾32位字符串作为解密配置文件名
	f=open(execFileName,'rb')
	fileData=f.read()
	f.close()
	# configName=fileData[-32:].decode('utf-8')
	configName=xorDecConfigName(fileData[-33:])
	alreadyTiped=False
	while True:
		if not exist(configName):
			out.outlnC('找不到解密配置文件！','black','red',1)
			if not alreadyTiped:
				out.outlnC('如果需要进行加密压缩，请将文件或文件夹拖放到程序图标上！','cyan','black',1)
				alreadyTiped=True
			configName=input('如果您知道配置文件名，请在此处输入：')
		else:
			break
	
	password=''
	encryptConfig={}
	while True:
		password=''
		encryptConfig={}
		while True:
			if password!='':
				break
			else:
				password=input('请输入密码：')
		
		# out.outlnC('开始进行解压！','black','green',1)
		# 解密配置数据
		out.outC('正在解密配置数据……','cyan','black',1)
		configBeginTime=time.time()
		try:
			encryptConfig=decryptEncryptConfig(password, loadFile(configName,'rb'))
			if encryptConfig!=False:
				configEndTime=time.time()
				out.outlnC(f'[完成，用时{formatSeconds(configEndTime - configBeginTime)}]','green','black',1)
				break
			else:
				out.outlnC('[解密失败！密码错误？]','red','black',1)
		except Exception as e:
			out.outlnC('[解密错误！算法有误？]','red','black',1)
			out.outlnC(e,'red','black',1)
	
	# 输出项目名
	if encryptConfig['name']!='':
		out.outln('')
		out.outln(encryptConfig['name'])
		out.outln('')
	# 输出描述和欢迎信息
	if encryptConfig['description']!='':
		out.outln(encryptConfig['description'])
		out.outln('')

	out.outlnC('开始进行解压！','black','green',1)
	# 对文件进行乱序重命名
	out.outC('正在重命名文件……','cyan','black',1)
	zFileName=''
	for fl in encryptConfig['fileList']:
		fileName=fl['fileName']
		fakeName=fl['fakeName']
		if fileName.split('.')[-1]=='001':
			zFileName=fileName
		os.rename(fakeName,fileName)
	# renStr='@echo off\n'
	# for fl in encryptConfig['fileList']:
	# 	fileName=fl['fileName']
	# 	fakeName=fl['fakeName']
	# 	renStr+=f'ren "{fakeName}" "{fileName}"\n'
	# 	if fileName.split('.')[-1]=='001':
	# 		zFileName=fileName
	# runBat(renStr)
	out.outlnC('[完成]','green','black',1)

	# 进行7z文件尾解混淆
	# 由于加密时是先头后尾，则在压缩后，只有一个分卷且极小时，原始尾的数据是混淆头，因此还原时必须先尾后头
	out.outC('正在解混淆文件尾……','cyan','black',1)
	lastFileName=max7zVolume(getAllFileList('.\\'))
	lastFileNameTmp=f'{lastFileName}.tmp'
	originTail=base64.b64decode(encryptConfig['originTail'])
	with open(lastFileName,'rb') as targetFile, open(f'{lastFileNameTmp}','wb') as originFile:
		targetData=targetFile.read()
		originFile.write(targetData)
		originFile.seek(-len(originTail),2)
		originFile.write(originTail)
		originFile.flush()
	os.remove(lastFileName)
	os.rename(f'{lastFileNameTmp}',lastFileName)
	out.outlnC('[完成]','green','black',1)

	# 进行7z文件头解混淆
	out.outC('正在解混淆文件头……','cyan','black',1)
	firstFileName=zFileName
	firstFileNameTmp=f'{firstFileName}.tmp'
	originHead=base64.b64decode(encryptConfig['originHead'])
	with open(firstFileName,'rb') as targetFile, open(f'{firstFileNameTmp}','wb') as originFile:
		targetData=targetFile.read()
		originFile.write(targetData)
		originFile.seek(0x00)
		originFile.write(originHead)
		originFile.flush()
	os.remove(firstFileName)
	os.rename(f'{firstFileNameTmp}',firstFileName)
	out.outlnC('[完成]','green','black',1)

	# 生成解密KEY
	out.outC('正在生成解密密钥……','cyan','black',1)
	encryptKey=calcEncryptKey(password,encryptConfig)
	out.outlnC('[完成]','green','black',1)

	# 创建输出目录，并写入必备文件
	out.outC('创建输出目录并写入必备文件……','cyan','black',1)
	_7z.output7zExe('7z.exe')
	out.outlnC('[完成]','green','black',1)

	# 调用7Z进行加密压缩
	out.outlnC('开始进行解压，这可能需要一定时间……','cyan','black',1)
	zBeginTime=time.time()
	cmdStr=f'@echo off\n"7z.exe" x -p{encryptKey} "{zFileName}"'
	runBat(cmdStr)
	zEndTime=time.time()
	out.outlnC(f'解压完成！用时{formatSeconds(zEndTime - zBeginTime)}。','green','black',1)

	# 删除不需要的文件
	out.outC('正在清理不必要的文件……','cyan','black',1)
	os.remove('7z.exe')
	out.outlnC('[完成]','green','black',1)

	out.outC('解压成功，请尽情使用吧！','black','green',1)
	out.outlnC('','white','black',0)
	print()
	out.outC('按任意键清理压缩包，如果不需要，请关闭窗口！','cyan','black',1)
	pause()
	# 删除压缩包和解压配置（移入回收站）
	if exist(configName):
		try:
			send2trash.send2trash(configName)
		except:
			pass
	for fl in encryptConfig['fileList']:
		fileName=fl['fileName']
		try:
			if exist(fileName):
				send2trash.send2trash(fileName)
		except:
			pass
	out.outC('[完成]','green','black',1)
	out.outlnC('','white','black',0)

########## CONFUSE ##########
___KdPRaulg8L0L67Md8QREhftIooZVsOfyfn9u8OKFzy2IF=''
########## CONFUSE ##########

def main():
	os.system('cls')
	version=f"v{VERSION['versionUpdate'][0]['mainVersion']} Build {VERSION['versionUpdate'][0]['dateVersion']}"
	if len(sys.argv)<2:
		os.system(f"title 资源解密解压工具 {version}")
		out.outlnC('-=<欢迎使用资源解密解压工具！>=-','purple','black',1)
		try:
			beginDecryptFiles()
			out.outln('按任意键退出。')
		except Exception as e:
			out.outlnC('程序执行错误！','black','red',1)
			out.outlnC(e,'red','black',1)
			out.outln('按任意键退出。')
		pause()
		return 0
	elif len(sys.argv)>2:
		os.system(f"title 资源加密压缩工具 {version}")
		out.outlnC('-=<欢迎使用资源加密压缩工具！>=-','purple','black',1)
		out.outlnC('请只拖入一个文件或文件夹！','red','black',1)
		out.outln('按任意键退出。')
		pause()
		return 0
	else:
		os.system(f"title 资源加密压缩工具 {version}")
		out.outlnC('-=<欢迎使用资源加密压缩工具！>=-','purple','black',1)
		out.outlnC('请在开始加密前，清空output文件夹，以免造成文件污染！','yellow','black',1)
		try:
			beginEncryptFiles(sys.argv[1])
			out.outln('按任意键退出。')
		except Exception as e:
			out.outlnC('程序执行错误！','black','red',1)
			out.outlnC(e,'red','black',1)
			out.outln('按任意键退出。')
		pause()
		return 0

########## CONFUSE ##########
___HPMl1SNxwQcChspoSUFrnnDAfYcYvDDT2awPZpY1esH5NGyqwgFL8gcsLs5H=''
########## CONFUSE ##########

if __name__=='__main__':
	main()

########## CONFUSE ##########
___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'
########## CONFUSE ##########
