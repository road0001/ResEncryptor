########## CONFUSE ##########
___3CHMcPXbhid7SJvX30Q9VvBmn53djTrQMTv39xszYFin84TEIgHUVWIRxd7=''
########## CONFUSE ##########

import os
import sys
import glob
import math
import time
import random
from random import shuffle
import base64
from Cryptodome.Util.Padding import pad
from Cryptodome.Cipher import AES
import _7zexe as _7z
import platform
import hashlib
import colorout as out
import json
import send2trash
from shutil import copyfile
import struct

########## CONFUSE ##########
___Hbpk7Gl727bo8OLYHt='Hbpk7Gl727bo8OLYHtsSDcZ8OhX1nGSUGn3nnT7yJCcZ6WTE1pSMIUrCFl3urrqFbksVUdyDqFeWArGS8Z4kdbaZztTXuJpKKZoQ9UmDiRQYYxkA5nWd4nymPfxsKzh1bNIjPw5YmtZ6LVDCXg9LNUikVr11BiTJo5RHU421zJU8EMFDxTaFCL52BV7d7KBHHNGtLoltFuyp0CtB20RJHUCtu10DWTGwIkenEotlOWAGiPyjMSZHN7DezDsRXKoUWuiyoLqpi5j8QV3Qc01TTKOAeB1RsdBAVZjNMN9cl6vfFXlOhMm0TGUTVmOKSgQy7HDEsywksL4xGdiYzyzQLxpcD4X8WFYmbg2UdFr6rKSIxH9C25DhHjhNmPt35kk6xPR9mSCUjBFd7mmtLiI0whqjQVsiEsJAwWV5XSZHOfSksULrCkEFpaYvvKS4JH7SiY27tUCLwo0gzNcPmc59rpROS7ORujMpnjl2lYREn5bBmmREfUn7dQzdPvdBbb8Er8yijsCGj5DPQ9F7w1g9waF6akfelh3J8xTD1OIfQz0NkcXwjKEvOTNd4lrAl2ouFfs5ww7OoDK89etGUkmrfJGMhrVO2PxZx1I66QqgP4jQPe54fRvDbm3RcUn48KgxMCESJ2PwtMKKLgcEmGGD3BeFNbxp3XcrcAVhyq5uEmpZttEmdgwWCXH7p4FuwXmbtu0cxnIIF7zpaubGV8KzC7tXtxoqATCDMZTQdQ4PUrwfFPRjbKaIT0haJr5ADk7eQzyCBH6bQkKG1MNrq12RszzcQR71jejm3yku1f4O7RyaOUEjItGqUjGZLLKQqAXBT9dVQMZmirC7Uc5MjeYm7JPIegsR1O0PRpFLhu1LH43MH4ggWjaDcmunvYdnyxbp4tzfjlzwwG8QTSFEd7ollHJIPyhh4VTaAeH45DPZiptsjXjCTCk0w0ZIPCLsaFfSMkA3MUwcGnyGy0sdJIgcXh0unKhxH9IeYRFNshSpf7HBYRfQihAFEDwNDPJzGg6DRuw40xcTyn6FrTxfxsbLq6h2fsVVGS2gHgKSUHUZjV8cKm0xfvpw3bghL6USZz3MGKQoAcWNtQVf8b69bDW7vz0mxbQzfx6q96zZTh43L5JsdSsVhbvwULRcneMS9oPQdTCVeewzSD8yAJUkBLcx9wtvEd06rAdQ307Chf8BBEe2QC3bLgGLjojXRFecDlyvSAVycNIEqclN1sBL7GSIJ5yyfTdQyMvEfNeNs4Ol4VxXEft1AO3uiggpPWAEqbUTSjHWMhGwOZw7C2Hz7l1EXFVYMQ9zbLcBdnqSnoyMO2iFNto1KPqnkX6X7JZWPoigrpXr1YrzxmdqQkSCsqSuM4BkP22Gu76wgg5QemvxAaX6DqOtGv4XJWa4LatSh6RbH55LYABzcExGnoiXPjqjAMAy9iJHlNq6LgtY4xNfoDRrfi4f6dxHYKktLf3HYYXbIgjs9rNEE85AIxKk5lalNjL50h7QlqR9bVL43vy4Vh2uBnZhpBUiU4Avg2U9N2jRwq1rP8U5Zw279YcwbOhnbNRqmHsxsw2c1latoNrFr1F4iV8x45hAS0gFfq9DJosXt1x1qGboYcskOQtGPYHIZkb2wCqTGQrLgz8ccsVB5BMb20J4gnsEr9oI5JMNhAZWknkETLe3MFFmywIMgunf4VAbqEem29WRVRU2Wf5Jee9pTmnK3o0gxexQ1pzWO8l0nzaTKjWZj8F1GSGGsuLt8Jzmpi6BOVzId99zKXXkM8BdCapCiFHrYHTLn9iHz8bq5ElJvWXUQBklEyRstcAZwsR59UDBjyto0vLmiaQ7dTRO2IRQa4jjQgKApWLgTG4CwBYmFjRxEYMqfEYrmANiAYcvr2wqYF5p20f8Fu5nGKqDoj9pGP8RgaZWR6FxqQDU5J8rGK95B1U5pGSPwKtrJ7u8Ev4si96is3Vwr7HTJHCezPMGUJ7grNkIdjyCvm5btFMMVRA5R4rr3oDH8z0rEPROMfn2HMCOqBKvCNzouxzEZVfa6oyxnohYE3pLpV2xr5qVJeC3Fo5ccUcCzhWaGpJ4r9RSXFT6hWsHUh4d7udsO5qevF2NjaY1otWFAGZ7JqbkYVloe246wQ9gIMSdLP6lhHR3HH0zPnv8aRrLdqrqENxulF6zIzjcZnoFitOmupzrt2Q0x4Gz2wPNgzxzO2rAXPft5936tlO7QXZ2SyXpP9WzDf6QxbsXclbdZPxeHLeRRwiOc70bYtrf7eZ4w8T0J0f8zP9V3B9FFSPICkvlQFF8FXptSXGqRfLUmMmvC0B3VxDvc9q2gGSjHkVzk2LepzSQFpW6d0mAai44CM01R5l4YHBV3KexyQZu50i9bNOJRZ4qz3knPsJggp2tScQglMWGStxI6VJjwosUVT1RbM7dbYpGCadnKBQZ8gbSq0H3vN0RQE1y8jgzCYUqD6Y3PQaloX3ARo8dWdgU7L9ME4s6H78MToMQFaub6LslqMtuWz6pRcOoDi5aU2segexDXvDWJaXpXMRFOGGEpS6jdlCZ8HhtLNcyF0pjx93GujcZh1ydQ5q1dCnE9WddmOMYtumNtCImelea3undTpipFjftW6SEgTvxy3IG1VyunuK38OnmIGZUiCozWGusPmYpmtI1zv3Zo75jdqvjWQW3Bxha2EhfiSK0sETOS9mXnbegxWiXEYDEJGe577udvuYnlv5yyo3eRB1wCWkjycYJkhn4PIcPAFJe9oLznjdfUbrTUjJ9fHJfYXtSrYsCkbFDspChRWfHTmW6shfVKgupcxW2KCfy5EutEVtvDUegUMHiuAc1JSFqpQYgQ1srUP9zme2oIxaOu4ZIPKASNcPlYPmv5YUp5dpXf4B2qwf7UhqzJasuq2hmy0N2K4zXK8pQHge4VNaKFdgvZkq2U1JuIUtwaTssrkrxQK3CpjDj4dCUVwRgAZSlSyzslNPTLMsp8GFd2JShl84XKF42hszvreQcCU7c3tuc0tbPG2cTxt4ugqJQVobfw9adWN4N1G7517QPKLxmPYDLQkICgWoQlBPjPqJ9bGaJsBndYsSB6KFNRz10bTWAak2N1bQvIlKSMGnDuFmWaUYVSCCJx6y6ax61sIR0vSBujy1SuZGNwXmuu2hFJlJAPZr2K22lIdCYbSq0cckLD6PEKFuxPJ1IHVAzLcIeLbtqow13yrkaFwKXVmeY9PpEVloA1ACchV2r5Eigd397tJpQzUtRrQp8VwqwGlYnhOQxJoCktrOSVEM5skpf6vF2SvanD4xYdOhHtM5cpOAiwr61FWWnuNcmqPrpduZA1Jot4eFaAkf08sUa6cKvxAG2BdkZRns5BgWGXK7PtJ5s1QnZPQCNs3VkRDokmKgbyuaD3eYPPFMuLgOYgbieuJfoHgj51keAEOImzy25w7tbRkWQMK29AKzT0YXNcvJr3sypDGZiig7OnxBhE4V0F2PKN7jY5COIFHL4jAbkJICihv2rsyTUOJtczjsBLa5KM59UNFB9dK0NYmjbEsTyXmiYiTqneS5cI2e4hyQOEO74jt8t3FHZbZWV2bsNeZSxU9tCafF29bzYlfmpJWhPAYR4Ai1sNPQrl25b70CXNgdZwFPZlB0xeoKJDi2MyuMTIVqtxdALR0jw2BLwKIkNoC8veoRvmD1fsJud0kCOBQPk2IzhNqCODAcXH8QoCLZBOOphVQRl2Omdrfhcg8ijBRPVrOkxbRC7orIYVTo8I6YfDRTQut5TniodYqPhGMASn6wWupiPEudpUH5Lrr0LcnnOq7VxmepyPIq8ftjZoyghbj8V9g3OmROaUzfA40qXd12mspGflSHcX2mnCpjHZQIsEfYSkVHlxJf4LQtrDEdggAhgY6LkmusNhmHe7gvZes49zL06XxpPGOTNVnqlP19UxzPjaPGTZynjBkioeYB9bQJYjbMRuT8ZEH2b8sd6rSEaesIsefhspOjpyV6DAVyZpf2tiDEXF963DVGv2bYlI0voaxJl2fb7CeKKMAdU5BPeof3AkXY3STdr7KNMpmK9qbTwrR792P'
########## CONFUSE ##########

VERSION={
"appName":"ResEncryptor",
"appNameCN":"资源加密压缩工具",
"versionUpdate":[
{
	"mainVersion":"1.1.1",
	"dateVersion":"20230703",
	"versionDesc":[
		"加入随机文件名变长功能。",
		"调整混淆数据和随机文件头的长度。",
		"修复解密时，文件不存在会异常退出的bug。",
	""]
},
{
	"mainVersion":"1.1.0",
	"dateVersion":"20230628",
	"versionDesc":[
		"加入混淆压缩包最后一个文件尾部功能，以减少特征。",
		"修复极小的文件，混淆头尾会溢出的bug。",
	""]
},
{
	"mainVersion":"1.0.9",
	"dateVersion":"20230627",
	"versionDesc":[
		"调整AES密钥结构。",
		"调整混淆数据大小范围。",
		"调整解密配置数据编码方式为base64。",
		"调整解密配置分隔符为默认盐，以增强兼容性。",
		"修复极小概率情况下，输入正确密码也会解密失败的bug。",
	""]
},
{
	"mainVersion":"1.0.8",
	"dateVersion":"20230626",
	"versionDesc":[
		"加入自动更新混淆数据功能。",
		"加入压缩、解压用时统计功能。",
		"解密配置加入项目名、版本字段。",
		"调整解密配置混淆数据随机范围。",
		"调整输出的项目文件夹改为随机字符串。",
	""]
},
{
	"mainVersion":"1.0.7",
	"dateVersion":"20230625",
	"versionDesc":[
		"调整解密配置文件名的附加算法，改为随机异或。",
		"调整解密配置重复迭代算法，减小密文数据体积。",
		"调整解密配置重复迭代次数，大幅提升暴力破解时间成本。",
	""]
},
{
	"mainVersion":"1.0.6",
	"dateVersion":"20230620",
	"versionDesc":[
		"更换混淆数据。",
		"将重命名功能改为Python内置库。",
		"调整混淆文件头的数据长度阈值。",
		"加入解密配置重复迭代功能，以对抗暴力破解。",
	""]
},
{
	"mainVersion":"1.0.5",
	"dateVersion":"20230619",
	"versionDesc":[
		"更换混淆数据。",
		"统计文件时，加入文件夹的统计。",
		"加入混淆7Z压缩包文件头功能，规避文件头识别。",
	""]
},
{
	"mainVersion":"1.0.4",
	"dateVersion":"20230613",
	"versionDesc":[
		"更换混淆数据。",
		"略微调整解密流程。",
		"去除配置文件编码base64的操作。",
	""]
},
{
	"mainVersion":"1.0.3",
	"dateVersion":"20230612",
	"versionDesc":[
		"加入密钥随机大小写功能。",
		"加入分卷大小随机增量功能。",
		"在代码中随机位置加入混淆数据。",
	""]
},
{
	"mainVersion":"1.0.2",
	"dateVersion":"20230609",
	"versionDesc":[
		"加入自动清理压缩包功能（移入回收站）。",
		"加入在找不到配置文件时，手动输入配置文件名功能。",
		"将字符串中format引用变量的方法改为f''。",
	""]
},
{
	"mainVersion":"1.0.1",
	"dateVersion":"20230608",
	"versionDesc":[
		"完善功能提示。",
		"完成解密解压功能。",
		"修复文本错误。",
	""]
},
{
	"mainVersion":"1.0",
	"dateVersion":"20230607",
	"versionDesc":[
		"实现基础功能。",
		"完成加密压缩功能。",
	""]
}
]
}

########## CONFUSE ##########
___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'
########## CONFUSE ##########

'''
Configs
'''
# 输出目录
outputDir=f'{os.getcwd()}\\output'
# 分卷范围（此范围是压缩前的分卷范围，压缩后的情况不可知）。[最少分卷，最多分卷，分卷增量上限]
volumeRange=[20,50,65536]
# 默认盐，和配置文件加解密有关，不可随便更换，否则不兼容其他版本
defaultSalt='KnWn7ZYSa309KyYnruB0JXF9zIRAsQNx'
# 随机文件头长度范围
randomHeadLengthRange=[4096,65536]
# 解密配置数据重复加密迭代次数
encryptConfigRepeatCount=[10000,10000]
# 混淆数据长度范围
confuseLength=[1024,65536]
# 解密配置与混淆数据的分隔符
encryptConfigSplit=defaultSalt
# 随机文件名长度范围
fakeFileNameLengthRange=[16,64]

########## CONFUSE ##########
___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'
########## CONFUSE ##########

'''
Utils
'''
def cmd(c):
	os.system(c)

def wait(n):
	time.sleep(n)

def runBat(batStr,output=''):
	writeFile(f'{output}temp.bat',batStr)
	os.system(f'{output}temp.bat')
	os.remove(f'{output}temp.bat')

def pause(c=None):
	if c:
		print(c)
	cmd('pause>nul')

def cwd():
	return os.getcwd()

def exist(dirs):
	return os.path.exists(dirs)

########## CONFUSE ##########
___oidEHs6lrGeFHVfo6djIg3QCjfGKqpA43xf7CkGaajGOmCm1EDvloZIQ45xCgAskrTTKD=''
########## CONFUSE ##########

def loadFile(file,tp='r'):
	try:
		f=open(file,tp)
		fs=f.read()
		f.close()
		return fs
	except:
		return None

def writeFile(file,data,tp='w'):
	try:
		f=open(file,tp)
		f.write(data)
		f.close()
		return True
	except:
		return False

########## CONFUSE ##########
___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'
########## CONFUSE ##########

def getAllFileList(addr,includeFolders=False):
	allFileList={'files':[],'folders':[]}
	if not exist(addr): #路径不存在的情况
		pass
	elif not os.path.isdir(addr): #路径为文件的情况
		allFileList['files'].append(addr)
	else: #路径为文件夹的情况
		for root, dirs, files in os.walk(addr):
			for name in files:
				allFileList['files'].append(os.path.join(root, name))
			for name in dirs:
				allFileList['folders'].append(os.path.join(root, name))
	if includeFolders==True:
		return allFileList
	else:
		return allFileList['files']

def max7zVolume(fileList):
	current=0
	index=0
	if len(fileList)>0:
		for i in range(len(fileList)):
			f=fileList[i]
			fs=f.split('.')[-1]
			fn=0
			try:
				fn=int(fs)
			except:
				pass
			if fn>current:
				current=fn
				index=i
		return fileList[index]
	else:
		return None

def getAllFileSize(fileList):
	fileSize=0
	for file in fileList:
		fileSize+=os.path.getsize(file)
	return fileSize

def formatFileSize(b):
	units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']
	size = b
	unitIndex = 0
	while size >= 1024 and unitIndex < len(units) - 1:
		size /= 1024
		unitIndex+=1
	
	# 保留两位小数，四舍五入
	size = round(size * 100) / 100
	return f'{size} {units[unitIndex]}'

def randomPassword(length=10):
	pasArr = [
		'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',
		'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',
		'0','1','2','3','4','5','6','7','8','9',
		# '\'','~','!','@','#','$','%','^','&','*','(',')','-','=','_','+','[',']','\\',';',''',',','.','/','{','}','|',':','"','<','>','?',
		# '~','!','@','#','$','%','^','&','*','(',')','-','=','_','+','[',']',';',''',',','.','/','{','}','|',':','"','<','>','?',
	]
	password = ''
	pasArrLen = len(pasArr)
	for i in range(0,length):
		password += random.choice(pasArr)
	return password

def genSalt():
	return randomPassword(32)

def randomBin(length=10):
	return os.urandom(length)

def genCapsList(length):
	capsList=[]
	for i in range(length):
		isCaps=random.randint(0,1)
		if isCaps==1:
			capsList.append(i)
	return capsList

def formatSeconds(s):
	timeObj=time.gmtime(s)
	timeStr=''
	if s<60:
		timeStr=f'{round(s,2)}秒'
	else:
		if timeObj.tm_yday-1>0:
			timeStr+=f'{timeObj.tm_yday-1}天'
		if timeObj.tm_hour>0:
			timeStr+=f'{timeObj.tm_hour}小时'
		if timeObj.tm_min>0:
			timeStr+=f'{timeObj.tm_min}分'
		if timeObj.tm_sec>=0:
			timeStr+=f'{timeObj.tm_sec}秒'
	return timeStr

########## CONFUSE ##########
___bTsqS7Y2q5o7LuroBGsi0EZZ3buFLZmCBRSJ782eT0Fgf8kRXuTv7yvgyZL2Z95WDGL7zvYqSovzzYBaGYc1jNOi0ogSPAnL=''
########## CONFUSE ##########

'''
AES加密
'''
# 将明文用AES加密
def AES_Encrypt(password, data):
	key=hashlib.md5((f'{password}|{defaultSalt}').encode(encoding='utf-8')).hexdigest()
	iv=hashlib.md5((key).encode(encoding='utf-8')).hexdigest()[0:16]
	obj = AES.new((key).encode(), AES.MODE_CBC, (iv).encode())
	# return base64.b64encode(obj.encrypt(pad(data.encode(),16)))
	# 对于字符串数据，将它转化为bytes
	if isinstance(data,str):
		data=data.encode(encoding='utf-8')
	return obj.encrypt(pad(data,16))

def AES_Decrypt(password, data):
	key=hashlib.md5((f'{password}|{defaultSalt}').encode(encoding='utf-8')).hexdigest()
	iv=hashlib.md5((key).encode(encoding='utf-8')).hexdigest()[0:16]
	obj = AES.new((key).encode(), AES.MODE_CBC, (iv).encode())
	# return obj.decrypt(base64.b64decode(data))
	return obj.decrypt(data)

def xorStr(s,k):
	r=b''
	for c in s:
		if isinstance(c,str):
			c=ord(c)
		r+=struct.pack('B',c^k)
	return r

########## CONFUSE ##########
___WaRnIkayk5bAGC3DRQ07zPGmK4P4YuSpNPeo97QfUEYJqEOg3zEA1ZA8v0Jw2544fgMG5ijSq0=''
########## CONFUSE ##########

'''
App
'''
targetFileData={}
def applyFileData(file):
	targetFileData['path']=file
	targetFileData['name']=file.split('\\')[-1]
	pathList=getAllFileList(targetFileData['path'],True)
	fileList=pathList['files']
	fileSize=getAllFileSize(fileList)
	folderList=pathList['folders']

	targetFileData['fileList']=fileList
	targetFileData['fileCount']=len(fileList)
	targetFileData['folderCount']=len(folderList)
	targetFileData['fileSize']=fileSize

########## CONFUSE ##########
___UKOLTTsnHHdGen670aRYMlhkQn4D5ibVNphZWzSJvo8JoRUnJ2bhocg1f=''
########## CONFUSE ##########

'''
生成配置数据
参数：混淆头，混淆尾
'''
def genEncryptConfig(chead, ctail, desc):
	# ctype=1：混淆头尾合并；ctype=2：混淆头尾拆分
	ctype=random.randint(1,3)
	config={
		'salt':genSalt(),
		'name':'',
		'description':desc,
		'timestamp':int(time.time()),
		'fileList':[],
		'capsList':genCapsList(128),
		'originHead':'',
		'originTail':'',
		'version':VERSION['versionUpdate'][0],
	}
	if ctype==1:
		config['confuse']=chead+ctail
	elif ctype==2:
		config['confuseHead']=chead
		config['confuseTail']=ctail
	elif ctype==3:
		config['confuseHead']=chead
		config['confuseMidd']=chead+ctail
		config['confuseTail']=ctail
	# 随机配置序列
	ckeys=list(config.keys())
	random.shuffle(ckeys)
	cconfig={}
	for k in ckeys:
		cconfig[k]=config[k]
	return cconfig

def xorEncConfigName(configName):
	configNameXorNum=random.randint(8,255)
	# 返回n+1字节，其中n字节为异或后的bytes，最后一位为异或码
	return xorStr(configName,configNameXorNum) + struct.pack('B',configNameXorNum)

def xorDecConfigName(configNameXorAll):
	configNameXorStr=configNameXorAll[0:-1]
	configNameXorNum=configNameXorAll[-1]
	return xorStr(configNameXorStr, configNameXorNum)

def b64encode(s):
	if isinstance(s,str):
		s=s.encode(encoding='utf-8')
	return base64.b64encode(s).decode('utf-8')
def b64decode(s):
	if isinstance(s,str):
		s=s.encode(encoding='utf-8')
	return base64.b64decode(s).decode('utf-8')

########## CONFUSE ##########
___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'
########## CONFUSE ##########

'''
加密配置数据
参数：配置，混淆头，混淆尾
'''
def encryptEncryptConfig(password,config,chead,ctail):
	# return base64.b64encode('{}\b{}\b{}'.format(chead,json.dumps(config,ensure_ascii=False),ctail).encode(encoding='utf-8')).decode('UTF-8')
	# return AES_Encrypt(password,f'{chead}\b{json.dumps(config,ensure_ascii=False)}\b{ctail}').decode('UTF-8')
	# return AES_Encrypt(password,f'{chead}\b{json.dumps(config,ensure_ascii=False)}\b{ctail}')
	
	# 使用多次加密迭代，增加解密时间成本，抗暴力破解
	encryptCount=random.randint(encryptConfigRepeatCount[0], encryptConfigRepeatCount[1])
	encConfigStr=f'{chead}{encryptConfigSplit}{b64encode(json.dumps(config,ensure_ascii=False))}{encryptConfigSplit}{ctail}'
	# for i in range(0,encryptCount-1):
	# 	encConfigStr=base64.b64encode(AES_Encrypt(password,encConfigStr)).decode('UTF-8')
	# encConfigStr=AES_Encrypt(password,encConfigStr)
	for i in range(0,encryptCount):
		encConfigStr=AES_Encrypt(password,encConfigStr)
	return encConfigStr
'''
解密配置数据
参数：已加密的配置数据
'''
def decryptEncryptConfig(password,data):
	# decData=AES_Decrypt(password,data)
	# # config=base64.b64decode(data).decode(encoding='utf-8').split('\b')[1]
	# config=decData.decode(encoding='utf-8').split('\b')[1]
	# return json.loads(config)
	
	# 使用多次加密迭代，增加解密时间成本，抗暴力破解
	# decData=AES_Decrypt(password,data)
	# for i in range(0, encryptConfigRepeatCount[1]):
	# 	decData=AES_Decrypt(password,base64.b64decode(decData))
	# 	try:
	# 		decSplit=decData.decode(encoding='utf-8').split('\b')
	# 		if len(decSplit)==3:
	# 			config=decSplit[1]
	# 			try:
	# 				return json.loads(config)
	# 			except:
	# 				pass
	# 	except:
	# 		pass
	# return False
	decConfigStr=data
	for i in range(0, encryptConfigRepeatCount[1]):
		try:
			decConfigStr=AES_Decrypt(password,decConfigStr)
		except:
			# 当AES无法正确解码时，循环终止，进行后续处理
			break
	decSplit=decConfigStr.decode('utf-8','ignore').split(encryptConfigSplit)
	if len(decSplit)==3:
		config=decSplit[1]
		try:
			return json.loads(b64decode(config))
		except:
			return False
	else:
		return False

########## CONFUSE ##########
___hSjxf7TgoXCMcd3z306QMksF6VM7NMOfB5zI7jV0k9kmEAhWlIeo=''
########## CONFUSE ##########

'''
根据配置计算压缩包密钥
参数：密码，配置数据
'''
def calcEncryptKey(password, config):
	# 生成盐和盐的MD5
	salt=config['salt']
	saltMd5=hashlib.md5((salt).encode(encoding='utf-8')).hexdigest()
	# 生成密码的MD5
	passwordMd5=hashlib.md5((password+salt).encode(encoding='utf-8')).hexdigest()
	# 生成时间戳和时间戳的MD5
	timestamp=config['timestamp']
	timestampMd5=hashlib.md5((f'{timestamp}').encode(encoding='utf-8')).hexdigest()
	# 生成【密码的MD5|盐|时间戳】拼合的MD5
	comitMd5=hashlib.md5((f'{passwordMd5}|{salt}|{timestamp}').encode(encoding='utf-8')).hexdigest()
	# 生成密钥：【密码的MD5盐的MD5时间戳的MD5拼合的MD5】，每个MD5长度32位，总密钥长度128位
	encryptKey=f'{passwordMd5}{saltMd5}{timestampMd5}{comitMd5}'
	# 根据capsList更改大小写
	encryptKeyList=list(encryptKey)
	for caps in config['capsList']:
		encryptKeyList[caps]=encryptKey[caps].upper()
	encryptKey=''.join(encryptKeyList)

	return encryptKey

########## CONFUSE ##########
___At33gCRAGoolKCsOi5m8aMp0f94LUcFa2mxBGtUxMOIZi5Ki6DSj31P7gUFkAmN8WOFJECqn4bwF5mZrldBGctXG3uqzqmeV8HHcP56QYX7MWaGOX='At33gCRAGoolKCsOi5m8aMp0f94LUcFa2mxBGtUxMOIZi5Ki6DSj31P7gUFkAmN8WOFJECqn4bwF5mZrldBGctXG3uqzqmeV8HHcP56QYX7MWaGOXKkvJVFseWB5154gk8eOrUKE9UJLT5ytCXq5Fva98igA3qnFTch2Amjui81Iz3hrNZBWpjNfZoNBIEUPgSbESxsmXUj2ACdOtxVAqKW6n030icqvmu05DidRfOKPBxrqPcgtwDGxSGw0anWG8ypeTvIqGy4GEI7DhBOVtZ4bvvE1oxZTN0MYoVHfV6F8dh3KcXWyA5WRlcz7N2OtPhgstWXQRQGSNfUC1KHkS93H4iNkDx5KWEYomElL2mMQMum5JZGBxfeSNunxyaQQUi29OzmCXD3QUhUEltuAYNXeETVgK2P4QbcmHADdArJUlM1ksrBfoeIN36HbJHm9hhfkpz3GZ9ME2hPmrkHR3pVPas2PpIpkFqVWHYJN9kLzax6m1mBPOzGdGSfk5mPSKaev0rC28kh3uIM7Pfm1ryfppMRzLNNiDTAqX8Ksyc3rJnP2A0quCa0l7kTP35Qdj3Bse7tBhNT5ZPxHK7tStMw8f3qwmiDiMNCjZPiaOlHEVczormqCJiVoMAkTcBW1l1q6ONe1Em809ZchoCtPc0PnhU9rYSZFPyvOc6zQBy5zoVMGtr7wKF4YofSJ2JZFlhfsdDdeY5whj5t3uyHtR6stEW32sBw40cwMzVz5Y9h9V5u6YiyFu0cEfLEQIG1VcYyHsIOYd1EwpxyXKLmyuCdgqpeJpWpslfVn5ZmEdEhMCnhy4hjbyIRpZSFQJoNRIadhj0ddj0DVphUfGFZ3b2aLOtPYkLdWKtHUKDkCLz5nFqBUkwzB6s7wDd6zfQUpdOfG4fSPNxEIGIIYvJdX7kafXrAVVI741GuS7jJXC17PJHedpOCKT0PNnosAPmJXrcNovN3MoP9wkLRK9q0Kv0cPFnq6wtZDHqYggwQxlaQaXIgeB4ibBM3ZK4QsFDgrjQhwo6Up9hHlwj9WW4prYFdXPmp6mr4jcWuyHEHk3DXg2fsEQ4UJqzMhEAugDSRZ3iNfJymfQsB4t7uy5Q5YSabzwkVTr8QxCWvhIpCcCjreltvZlAhyDcwJfHBCs4EBgq9QzVhyL4NDzFRA2bjc8GanfvqabnsksR1EPFBY2rQyLpalHFCtXujrILxh5A9zdS4XASkASryviQv4uKUvl6fxj44kQAXyQuxsCutJ28FlDeFOUOdP829GtBG3D4r7dqQnL6GHfmWxTMhTZBK1aKrIhr7oEnK5lM8HmMhyM7O3iurXDuY2FfY2BiYMguOD5ZstbSRjpPRe4R02kULjyjZWOh0Wkbv9PkVKCz4319BgdnVujQG4tSF7TPkOBT03XsU17ThEyiENiY1HqoFxk9f5s1PP1QRZ1HKn76bP3H8yGJotQCKly1T58YwlA2Id2Hs3ZcyXPNN86Yz4UdQlYyy23I57cJP5YGGaudS2oViGvoJhV5AibWQUAgTniIpoU'
########## CONFUSE ##########

def makeOutputDir(addr):
	dirs=f'{outputDir}\\{addr}'
	if not exist(dirs):
		os.makedirs(dirs)
	return dirs

def genRandomFileName():
	return randomPassword(random.randint(fakeFileNameLengthRange[0],fakeFileNameLengthRange[1]))

########## CONFUSE ##########
___gvo3OvEgD5U7t68vu1iV1jWkJDZj5KPWOBKFIyZaCzoBiBq0qEgnbvRjfQ7cjd2QOz11OsXDZICjpxyi5Z1YPfKydHilinatd7IBFRX45VtILuQFoAFeedFppa=''
########## CONFUSE ##########

def beginEncryptFiles(file):
	applyFileData(file)
	if targetFileData['path']:
		if targetFileData['fileCount']<1:
			out.outlnC('文件数量为0，无法继续进行操作！','yellow','black',1)
			return 0
		out.outlnC('加载文件：【{path}】\n共{fileCount}个文件，{folderCount}个文件夹，总大小：{fSize}'.format(**targetFileData,fSize=formatFileSize(targetFileData['fileSize'])),'green','black',1)
		password=''
		while True:
			if password!='':
				break
			else:
				password=input('请输入密码：')
		desc=input('请输入留言，如果不需要，请留空：\n')
		print()
		out.outlnC('开始进行加密压缩！','black','green',1)

		# 生成混淆头尾和配置数据
		out.outC('正在生成混淆数据……','cyan','black',1)
		confuseHead=base64.b64encode(randomBin(random.randint(confuseLength[0],confuseLength[1]))).decode('UTF-8')
		confuseTail=base64.b64encode(randomBin(random.randint(confuseLength[0],confuseLength[1]))).decode('UTF-8')
		encryptConfig=genEncryptConfig(confuseHead, confuseTail, desc)
		encryptConfig['name']=targetFileData['name']
		out.outlnC('[完成]','green','black',1)

		#生成加密KEY
		out.outC('正在生成加密密钥……','cyan','black',1)
		encryptKey=calcEncryptKey(password,encryptConfig)
		out.outlnC('[完成]','green','black',1)

		# 创建输出目录，并写入必备文件
		out.outC('创建输出目录并写入必备文件……','cyan','black',1)
		projOutputDir=makeOutputDir(genRandomFileName())
		projCfgname='cfname'
		_7z.output7zExe(f'{projOutputDir}\\7z.exe')
		volumeCount=random.randint(volumeRange[0],volumeRange[1])
		volumeSize=int(targetFileData['fileSize'] / volumeCount)+random.randint(0,volumeRange[2])
		out.outlnC('[完成]','green','black',1)

		# 调用7Z进行加密压缩
		out.outlnC('开始进行压缩，这可能需要一定时间……','cyan','black',1)
		zBeginTime=time.time()
		cmdParms={
			'projOutputDir':projOutputDir,
			'encryptKey':encryptKey,
			'volumeSize':volumeSize,
			'fileName':targetFileData['name'],
			'filePath':targetFileData['path'],
			'fileSize':targetFileData['fileSize'],
		}
		cmdStr='@echo off\n"{projOutputDir}\\7z.exe" a -p{encryptKey} -mhe=on -v{volumeSize}b "{projOutputDir}\\{fileName}.7z" "{filePath}"'.format(**cmdParms)
		runBat(cmdStr,'output\\')
		zEndTime=time.time()
		out.outlnC(f'压缩完成！用时{formatSeconds(zEndTime - zBeginTime)}。','green','black',1)

		# 进行7z文件头混淆
		out.outC('正在混淆文件头……','cyan','black',1)
		firstFileName=f"{projOutputDir}\\{targetFileData['name']}.7z.001"
		firstFileNameTmp=f'{firstFileName}.tmp'
		firstFileLength=os.path.getsize(firstFileName)
		randomHeadLength=random.randint(randomHeadLengthRange[0],randomHeadLengthRange[1])
		if randomHeadLength > firstFileLength:
			randomHeadLength=firstFileLength
		randomHead=randomBin(randomHeadLength)
		with open(firstFileName,'rb') as originFile, open(f'{firstFileNameTmp}','wb') as targetFile:
			originData=originFile.read()
			encryptConfig['originHead']=base64.b64encode(originData[0:randomHeadLength]).decode('UTF-8')
			targetFile.write(originData)
			targetFile.seek(0x00)
			targetFile.write(randomHead)
			targetFile.flush()
		os.remove(firstFileName)
		os.rename(f'{firstFileNameTmp}',firstFileName)
		out.outlnC('[完成]','green','black',1)

		# 进行7z文件尾混淆
		out.outC('正在混淆文件尾……','cyan','black',1)
		lastFileName=max7zVolume(getAllFileList(f'{projOutputDir}'))
		lastFileNameTmp=f'{lastFileName}.tmp'
		lastFileLength=os.path.getsize(lastFileName)
		randomTailLength=random.randint(randomHeadLengthRange[0],randomHeadLengthRange[1])
		if randomTailLength > lastFileLength:
			randomTailLength=lastFileLength
		randomTail=randomBin(randomTailLength)
		with open(lastFileName,'rb') as originFile, open(f'{lastFileNameTmp}','wb') as targetFile:
			originData=originFile.read()
			encryptConfig['originTail']=base64.b64encode(originData[-randomTailLength:]).decode('UTF-8')
			targetFile.write(originData)
			targetFile.seek(-randomTailLength,2)
			targetFile.write(randomTail)
			targetFile.flush()
		os.remove(lastFileName)
		os.rename(f'{lastFileNameTmp}',lastFileName)
		out.outlnC('[完成]','green','black',1)

		# 删除不需要的文件
		out.outC('正在清理不必要的文件……','cyan','black',1)
		os.remove(f'{projOutputDir}\\7z.exe')
		out.outlnC('[完成]','green','black',1)

		# 对文件进行乱序重命名
		out.outC('正在重命名文件……','cyan','black',1)
		for fp in getAllFileList(projOutputDir):
			fileName=fp.split('\\')[-1]
			fakeName=genRandomFileName()
			encryptConfig['fileList'].append({
				'fileName':fileName,
				'fakeName':fakeName,
			})
			os.rename(f'{projOutputDir}\\{fileName}',f'{projOutputDir}\\{fakeName}')
		# renStr=f'@echo off\ncd {projOutputDir}\n'
		# for fp in getAllFileList(projOutputDir):
		# 	fileName=fp.split('\\')[-1]
		# 	fakeName=genSalt()
		# 	renStr+=f'ren "{fileName}" "{fakeName}"\n'
		# 	encryptConfig['fileList'].append({
		# 		'fileName':fileName,
		# 		'fakeName':fakeName,
		# 	})
		# runBat(renStr,'output\\')
		out.outlnC('[完成]','green','black',1)

		# 生成混淆后的配置数据
		out.outC('正在加密配置数据……','cyan','black',1)
		configBeginTime=time.time()
		configName=genRandomFileName()
		decryptConfigString=encryptEncryptConfig(password, encryptConfig, confuseHead, confuseTail)
		writeFile(f'{projOutputDir}\\{configName}',decryptConfigString,'wb')
		# writeFile(f'{projOutputDir}\\{projCfgname}',configName) # 用python将文件名写入到临时文件中，以待后续合并使用。不能使用bat的echo，会输出空行
		writeFile(f'{projOutputDir}\\{projCfgname}',xorEncConfigName(configName),'wb') # 用python将文件名写入到临时文件中，以待后续合并使用。不能使用bat的echo，会输出空行
		configEndTime=time.time()
		out.outlnC(f'[完成，用时{formatSeconds(configEndTime - configBeginTime)}]','green','black',1)

		# 复制执行文件到输出目录
		out.outC('正在生成解压程序……','cyan','black',1)
		originFile=sys.argv[0]
		originFileName=originFile.split('\\')[-1]
		if(originFileName.split('.')[-1]!='exe'):
			out.outlnC('[请不要直接运行源码，否则无法解包！]','yellow','black',1)
		else:
			targetFile=projOutputDir+'\\'+originFileName
			copyfile(originFile, targetFile)
			# 混淆exe并重命名
			cpyStr =f'@echo off\ncd "{projOutputDir}"\n'
			cpyStr+=f'copy /b {originFileName}+{configName}+{projCfgname} {genRandomFileName()}.exe>nul\n'
			cpyStr+=f'del {projCfgname}>nul\n'
			cpyStr+=f'del {originFileName}>nul\n'
			runBat(cpyStr,'output\\')
			out.outlnC('[完成]','green','black',1)

		print()
		out.outC(f'输出目录：','cyan','black',1)
		out.outlnC(f'【{projOutputDir}】','green','black',1)
		print()
		out.outC('加密压缩已完成，您可以分享您的文件了！','black','green',1)
		out.outlnC('','white','black',0)

		return 0

########## CONFUSE ##########
___1GD0EECofupIzlsD77FAlvJCofyoyolcpQQ1VnfYCHAjm652dZefTfDM57RjVNSrxoHqwxaG4wWPOa=''
########## CONFUSE ##########

def beginDecryptFiles():
	execFile=sys.argv[0]
	execFileName=execFile.split('\\')[-1]
	# 读取exe文件，并获取末尾32位字符串作为解密配置文件名
	f=open(execFileName,'rb')
	fileData=f.read()
	f.close()
	# configName=fileData[-32:].decode('utf-8')
	# configName=xorDecConfigName(fileData[-33:])

	# 按照范围遍历来确定配置文件名
	configName=''
	for i in range(fakeFileNameLengthRange[0], fakeFileNameLengthRange[1]+1): # range包含左但不包含右，因此要+1
		configName=xorDecConfigName(fileData[-(i+1):])
		if exist(configName):
			break
	alreadyTiped=False
	while True:
		if not exist(configName):
			out.outlnC('找不到解密配置文件！','black','red',1)
			if not alreadyTiped:
				out.outlnC('如果需要进行加密压缩，请将文件或文件夹拖放到程序图标上！','cyan','black',1)
				alreadyTiped=True
			configName=input('如果您知道配置文件名，请在此处输入：')
		else:
			break
	
	password=''
	encryptConfig={}
	while True:
		password=''
		encryptConfig={}
		while True:
			if password!='':
				break
			else:
				password=input('请输入密码：')
		
		# out.outlnC('开始进行解压！','black','green',1)
		# 解密配置数据
		out.outC('正在解密配置数据……','cyan','black',1)
		configBeginTime=time.time()
		try:
			encryptConfig=decryptEncryptConfig(password, loadFile(configName,'rb'))
			if encryptConfig!=False:
				configEndTime=time.time()
				out.outlnC(f'[完成，用时{formatSeconds(configEndTime - configBeginTime)}]','green','black',1)
				break
			else:
				out.outlnC('[解密失败！密码错误？]','red','black',1)
		except Exception as e:
			out.outlnC('[解密错误！算法有误？]','red','black',1)
			out.outlnC(e,'red','black',1)
	
	# 输出项目名
	if encryptConfig['name']!='':
		out.outln('')
		out.outln(encryptConfig['name'])
		out.outln('')
	# 输出描述和欢迎信息
	if encryptConfig['description']!='':
		out.outln(encryptConfig['description'])
		out.outln('')

	out.outlnC('开始进行解压！','black','green',1)
	# 对文件进行乱序重命名
	out.outC('正在重命名文件……','cyan','black',1)
	zFileName=''
	renFileNameFailList=[]
	for fl in encryptConfig['fileList']:
		fileName=fl['fileName']
		fakeName=fl['fakeName']
		if fileName.split('.')[-1]=='001':
			zFileName=fileName
		if exist(fakeName):
			os.rename(fakeName,fileName)
		else:
			renFileNameFailList.append(fakeName)
	# renStr='@echo off\n'
	# for fl in encryptConfig['fileList']:
	# 	fileName=fl['fileName']
	# 	fakeName=fl['fakeName']
	# 	renStr+=f'ren "{fakeName}" "{fileName}"\n'
	# 	if fileName.split('.')[-1]=='001':
	# 		zFileName=fileName
	# runBat(renStr)
	if len(renFileNameFailList)<=0:
		out.outlnC('[完成]','green','black',1)
	else:
		out.outlnC('[警告]','yellow','black',1)
		for f in renFileNameFailList:
			out.outlnC(f'找不到文件【{f}】！','yellow','black',1)

	# 进行7z文件尾解混淆
	# 由于加密时是先头后尾，则在压缩后，只有一个分卷且极小时，原始尾的数据是混淆头，因此还原时必须先尾后头
	out.outC('正在解混淆文件尾……','cyan','black',1)
	lastFileName=max7zVolume(getAllFileList('.\\'))
	lastFileNameTmp=f'{lastFileName}.tmp'
	originTail=base64.b64decode(encryptConfig['originTail'])
	with open(lastFileName,'rb') as targetFile, open(f'{lastFileNameTmp}','wb') as originFile:
		targetData=targetFile.read()
		originFile.write(targetData)
		originFile.seek(-len(originTail),2)
		originFile.write(originTail)
		originFile.flush()
	os.remove(lastFileName)
	os.rename(f'{lastFileNameTmp}',lastFileName)
	out.outlnC('[完成]','green','black',1)

	# 进行7z文件头解混淆
	out.outC('正在解混淆文件头……','cyan','black',1)
	firstFileName=zFileName
	firstFileNameTmp=f'{firstFileName}.tmp'
	originHead=base64.b64decode(encryptConfig['originHead'])
	with open(firstFileName,'rb') as targetFile, open(f'{firstFileNameTmp}','wb') as originFile:
		targetData=targetFile.read()
		originFile.write(targetData)
		originFile.seek(0x00)
		originFile.write(originHead)
		originFile.flush()
	os.remove(firstFileName)
	os.rename(f'{firstFileNameTmp}',firstFileName)
	out.outlnC('[完成]','green','black',1)

	# 生成解密KEY
	out.outC('正在生成解密密钥……','cyan','black',1)
	encryptKey=calcEncryptKey(password,encryptConfig)
	out.outlnC('[完成]','green','black',1)

	# 创建输出目录，并写入必备文件
	out.outC('创建输出目录并写入必备文件……','cyan','black',1)
	_7z.output7zExe('7z.exe')
	out.outlnC('[完成]','green','black',1)

	# 调用7Z进行加密压缩
	out.outlnC('开始进行解压，这可能需要一定时间……','cyan','black',1)
	zBeginTime=time.time()
	cmdStr=f'@echo off\n"7z.exe" x -p{encryptKey} "{zFileName}"'
	runBat(cmdStr)
	zEndTime=time.time()
	out.outlnC(f'解压完成！用时{formatSeconds(zEndTime - zBeginTime)}。','green','black',1)

	# 删除不需要的文件
	out.outC('正在清理不必要的文件……','cyan','black',1)
	os.remove('7z.exe')
	out.outlnC('[完成]','green','black',1)

	out.outC('解压成功，请尽情使用吧！','black','green',1)
	out.outlnC('','white','black',0)
	print()
	out.outC('按任意键清理压缩包，如果不需要，请关闭窗口！','cyan','black',1)
	pause()
	# 删除压缩包和解压配置（移入回收站）
	if exist(configName):
		try:
			send2trash.send2trash(configName)
		except:
			pass
	for fl in encryptConfig['fileList']:
		fileName=fl['fileName']
		try:
			if exist(fileName):
				send2trash.send2trash(fileName)
		except:
			pass
	out.outC('[完成]','green','black',1)
	out.outlnC('','white','black',0)

########## CONFUSE ##########
___RyWaOxQCMI4y9tZp=''
########## CONFUSE ##########

def main():
	os.system('cls')
	version=f"v{VERSION['versionUpdate'][0]['mainVersion']} Build {VERSION['versionUpdate'][0]['dateVersion']}"
	if len(sys.argv)<2:
		os.system(f"title 资源解密解压工具 {version}")
		out.outlnC('-=<欢迎使用资源解密解压工具！>=-','purple','black',1)
		try:
			beginDecryptFiles()
			out.outln('按任意键退出。')
		except Exception as e:
			out.outlnC('程序执行错误！','black','red',1)
			out.outlnC(e,'red','black',1)
			out.outln('按任意键退出。')
		pause()
		return 0
	elif len(sys.argv)>2:
		os.system(f"title 资源加密压缩工具 {version}")
		out.outlnC('-=<欢迎使用资源加密压缩工具！>=-','purple','black',1)
		out.outlnC('请只拖入一个文件或文件夹！','red','black',1)
		out.outln('按任意键退出。')
		pause()
		return 0
	else:
		os.system(f"title 资源加密压缩工具 {version}")
		out.outlnC('-=<欢迎使用资源加密压缩工具！>=-','purple','black',1)
		out.outlnC('请在开始加密前，清空output文件夹，以免造成文件污染！','yellow','black',1)
		try:
			beginEncryptFiles(sys.argv[1])
			out.outln('按任意键退出。')
		except Exception as e:
			out.outlnC('程序执行错误！','black','red',1)
			out.outlnC(e,'red','black',1)
			out.outln('按任意键退出。')
		pause()
		return 0

########## CONFUSE ##########
___1nV1upgO438WncOATvFYp2R80D1=''
########## CONFUSE ##########

if __name__=='__main__':
	main()

########## CONFUSE ##########
___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'
########## CONFUSE ##########
